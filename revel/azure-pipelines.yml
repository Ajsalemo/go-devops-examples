# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
  - main
  
pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    steps:
    - script: |
        mkdir '$(System.DefaultWorkingDirectory)/go'
        mkdir '$(System.DefaultWorkingDirectory)/go/src'
        mkdir '$(System.DefaultWorkingDirectory)/go/pkg'
        mkdir '$(System.DefaultWorkingDirectory)/go/bin'
        mkdir '$(System.DefaultWorkingDirectory)/go/src/app'
        mkdir '$(System.DefaultWorkingDirectory)/go/src/app/build'
      displayName: 'Set up the Go workspace'

    - task: GoTool@0
      inputs:
        version: '1.19'
        goPath: $(System.DefaultWorkingDirectory)/go
        goBin: $(System.DefaultWorkingDirectory)/go/bin

    - task: Go@0
      inputs:
        command: custom
        customCommand: 'mod'
        arguments: 'tidy'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
      displayName: 'Go mod tidy'

    - task: Go@0
      inputs:
        command: 'custom'
        customCommand: 'install'
        arguments: 'github.com/revel/cmd/revel@latest'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
      displayName: 'Go install Revel'
      
    - script: |
        echo "##vso[task.setvariable variable=PATH]${PATH}:$GOBIN"
      displayName: 'Update $PATH for Go'
      
    - script: |
        shopt -s extglob
        shopt -s dotglob
        mv !(go) $GOPATH/src/app
        cd $(System.DefaultWorkingDirectory)/go/src/app
        revel build . ./build
      workingDirectory: '$(System.DefaultWorkingDirectory)'
      displayName: "Build with Revel"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/go/src/app'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    environment: '$(webAppName)'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Mysub(00000000-0000-0000-0000-0000000000)'
              appType: 'webAppLinux'
              WebAppName: 'myapp'
              packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              # We use a Node blessed image here, **for now**, because the Go Blessed Image does not let us ZipDeploy without attempting to run an Oryx build
              # This framework builds differently than others, and given this, we have to do a Zip Deploy since Oryx/Go's expected files will not be found
              # This is still okay because Revel builds to be ran in non-Go environments
              # Docs - https://revel.github.io/manual/deployment.html
              RuntimeStack: 'NODE|18-lts'
              StartupCommand: 'bash /home/site/wwwroot/build/run.sh'
              AppSettings: -SCM_DO_BUILD_DURING_DEPLOYMENT false