# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
  webAppName: 'your-site'

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    steps:
    - task: GoTool@0
      inputs:
          version: '1.19'
        
    - task: Go@0
      inputs:
          command: custom
          customCommand: 'mod'
          arguments: 'tidy'
          workingDirectory: '$(System.DefaultWorkingDirectory)/fiber'
      displayName: 'Go mod tidy'

    - task: Go@0
      inputs:
        command: 'build'
        workingDirectory: '$(System.DefaultWorkingDirectory)/fiber'
      displayName: 'Go build'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/fiber'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: drop
        
- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    environment: $(webAppName)
    strategy:
      runOnce:
        deploy:
          steps: 
          - task: AzureRmWebAppDeployment@
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'your-connection'
              appType: 'webAppLinux'
              WebAppName: 'your-site'
              packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              RuntimeStack: 'GO|1.19'

